      PROGRAM BNDARY
      PARAMETER(LENONE=1)
      character*4 MSPEC(10,50),MBDY(10),MNAM(10)        !CAMxv4
        DIMENSION MFID(60),
     $          MCON(10), MEND(10), MFIELD(10)
      character*4 MO3(10)       !CAMxv4
      DIMENSION  ISG(LENONE)
      DIMENSION  IND(200,4)
      DIMENSION  BC(10,200),CB(50)
      DATA MBDY /1HB, 1HO, 1HU, 1HN, 1HD, 1HA, 1HR, 1HY, 1H , 1H  /
        character*4 ifile(10)
      DATA ifile /1HB, 1HO, 1HU, 1HN, 1HD, 1HA, 1HR, 1HY, 1H , 1H  /
      DATA MCON / 1HC, 1HO, 1HN, 1HT, 1HR, 1HO, 1HL, 1H , 1H , 1H /
      DATA MEND / 1HE, 1HN, 1HD, 1H , 1H , 1H , 1H , 1H , 1H , 1H /
      DATA NIN /2/
      DATA NOU /3/
      DATA NUBDY /11/
      DATA NOSEG/1/
      OPEN(NIN,FILE='BNDARY.INP',STATUS='OLD')
      OPEN(NOU,FILE='BNDARY.CHK',STATUS='UNKNOWN')
      WRITE (NOU,6000)
C
C     *** READ CONTROL PACKET
C
C--CARD 1--PACKET HEADER
      READ (NIN,5100) MFIELD
CRS   READ (*,5100) MFIELD
      WRITE (NOU,6100) MFIELD
      DO 110 I=1,10
         IF (MFIELD(I).EQ.MCON(I)) GO TO 110
            WRITE (NOU,6110) MCON
            WRITE (*,6110) MCON
            GO TO 900
  110    CONTINUE
C
C--CARD 2--FILE NAME
      READ (NIN,5100) MFIELD
CRS   READ (*,5100) MFIELD
      WRITE (NOU,6100) MFIELD
c      DO 120 I=1,10
c         IF (MFIELD(I).EQ.MBDY(I)) GO TO 120
c            WRITE (NOU,6110) MBDY
c            GO TO 900
c  120    CONTINUE
C
C--CARD 3--FILE IDENTIFIER
      READ (NIN,5130) MFID
CRS   READ (*,5130) MFID
      WRITE (NOU,6130) MFID
C
C--CARD 4--SEGMENT
      READ(NIN,5330)NSP,IZERO,LINES,I1
      DO 10 I=1,4
10    READ(NIN,5330)
C
C--CARD 5--SPECIES NAME
      DO 11 J=1,NSP
11    READ(NIN,5100)(MSPEC(I,J),I=1,10)
C
C--CARD 6-- LIMIT OF TIME
      READ (NIN,5330) NBD, NBT, NED, NET
      WRITE (NOU,6330) NBD, NBT, NED, NET
      TBEG = FLOAT(NBT/100) + FLOAT(MOD(NBT,100))/60.
      TEND = FLOAT(NET/100) + FLOAT(MOD(NET,100))/60.
C
C--CARD 7--END
      READ (NIN,5100) MFIELD
      WRITE (NOU,6100) MFIELD
      DO 170 I=1,10
         IF (MFIELD(I).EQ.MEND(I)) GO TO 170
            WRITE (NOU,6110) MEND
            GO TO 900
  170    CONTINUE
C
C--CARD 8--"REGION"
      READ(NIN,5100)MFIELD
      READ(NIN,*)XUTM, YUTM, NZONE
      READ(NIN,*) XORG, YORG
      READ(NIN,*) DELTAX, DELTAY
      READ(NIN,*) NOXG, NOYG, NOZG
      READ(NIN,*) NVLOW, NVUP, DZSURF, DZMINL, DZMINU
C
C--CARD 9--END
      READ (NIN,5100) MFIELD
      WRITE (NOU,6100) MFIELD
      DO 180 I=1,10
         IF (MFIELD(I).EQ.MEND(I)) GO TO 180
            WRITE (NOU,6110) MEND
            GO TO 900
  180    CONTINUE

C--CARD 10--"BOUNDARIES"
      READ (NIN,5100) MFIELD
      DO 12 I=1,LINES
12    READ (NIN,*)

C--CARD 11--END
      READ (NIN,5100) MFIELD
      WRITE (NOU,6100) MFIELD
      DO 190 I=1,10
         IF (MFIELD(I).EQ.MEND(I)) GO TO 190
            WRITE (NOU,6110) MEND
            GO TO 900
  190    CONTINUE

C--CARD 12--"TIME INTERVAL"
      READ(NIN,5100)MFIELD
C--CARD 13 -- TIME LIMIT
      READ (NIN,5330) NBD, NBT, NED, NET
      TBEG = FLOAT(NBT/100) + FLOAT(MOD(NBT,100))/60.
      TEND = FLOAT(NET/100) + FLOAT(MOD(NET,100))/60.
      NINTERV=(NED-NBD)*24+(TEND-TBEG)+1
C--CARD 14 -- METHOD AND VERTICAL METHOD
      DO 200 I=1,7
200     READ(NIN,*)
C--CARD 15-- BOUNDARY READINGS
      DO 210 I=1,NSP
210    READ(NIN,1000)CB(I)
1000  FORMAT(20X,F10.0)
C-----------------------------------------------------------------------

C
C***********************************************************************
C
C     *** WRITE BOUNDARY FILE DESCRIPTION HEADER RECORD
C
        open(NUBDY,file='fort.11',
     +  form='unformatted',STATUS='unknown',convert='big_endian')
      WRITE (NUBDY) ifile, MFID, NOSEG, NSP, NBD, TBEG, NED, TEND
c      WRITE (NUBDY) MBDY, MFID, NOSEG, NSP, NBD, TBEG, NED, TEND
C
C     *** WRITE BOUNDARY REGION HEADER
C
      WRITE (NUBDY) XUTM, YUTM, NZONE, XORG, YORG, DELTAX, DELTAY,
     $         NOXG, NOYG, NOZG, NVLOW, NVUP, DZSURF, DZMINL, DZMINU
C
C     *** WRITE SEGMENT DEFN RECORD FROM BOUNDARY AND CALC MAXDIM
C
C    DATA ISG/4*1/
C     ISG(2)=NOXG
C     ISG(4)=NOYG
C     WRITE (NUBDY) (ISG(I), ISG(I+NOSEG), ISG(I+2*NOSEG),
C    $              ISG(I+3*NOSEG), I=1,NOSEG)
      WRITE (NUBDY) 1,1,NOXG,NOYG
C
C     *** NOW WRITE PAST THE SPECIES DEFN RECORD ON BOUNDARY
C
      WRITE (NUBDY) ((MSPEC(I,J),I=1,10),J=1,NSP)
C     *** WRITE EACH RECORD
      DATA IND/800*0/
      DO 100 NEDG=1,4
       NCEL=NOYG
       IF(NEDG.EQ.3.OR.NEDG.EQ.4)NCEL=NOXG
        DO 105 J=1,NCEL
         IND(J,1)=0
105     CONTINUE
       IF(NEDG.EQ.1.OR.NEDG.EQ.3) THEN
        DO 101 J=2,NCEL-1
         IND(J,1)=2
101     CONTINUE
       ELSEIF(NEDG.EQ.2) THEN
        DO 102 J=2,NCEL-1
         IND(J,1)=NOXG-1
102     CONTINUE
       ELSEIF(NEDG.EQ.4) THEN
        DO 104 J=2,NCEL-1
         IND(J,1)=NOYG-1
104     CONTINUE
       ENDIF
            WRITE (NUBDY) NOSEG, NEDG, NCEL,
     $       ((IND(J,M), M=1,4), J=1,NCEL)
100    CONTINUE
      NOZ=NOZG
      IF(DZSURF.NE.0)NOZ=NOZ+1
C     **** TIME INTERVAL RECORD
      JBD=NBD
      JED=JBD
      TB=TBEG-1
      TE=TEND
c      DO 680 IT=1,NINTERV
      DO 680 IT=1,1
       TB=TB+1
       TE=TB+1
       JED=JBD
       IF(TE.GT.24) THEN
        JED=JED+1
        TE=TE-24
       ENDIF
      WRITE (NUBDY) NBD, TBEG, NED, TEND
      JBD=JED
       DO 680 J=1,NSP
         DO 670 I=1,10
670       MNAM(I)=MSPEC(I,J)
      DO 220 K=1,NOZ
        DO 220 I=1,100
220      BC(K,I)=CB(J)
         DO 680 NEDG=1,4
            NCEL = NOYG
            IF (NEDG.GE.3) NCEL = NOXG
            WRITE (NUBDY) NOSEG, MNAM, NEDG,
     $        ((BC(K,I), K=1,NOZ), I=1,NCEL)
680      CONTINUE

900   STOP
C***********************************************************************
 5100 FORMAT (10A1)
 5130 FORMAT (60A1)
 5230 FORMAT (2F10.0)
 5330 FORMAT (4I10)
 5350 FORMAT(6L10)
 5360 FORMAT (2F10.0, I10, F10.0)
 5370 FORMAT (F10.0, I10, 2F10.0)
 5390 FORMAT (6I10)
 6000 FORMAT (1H1)
 6100 FORMAT (1X, 10A1)
 6110 FORMAT (43H **ERROR ON ABOVE CARD -- SHOULD HAVE BEEN , 10A1)
 6130 FORMAT (1X, 60A1)
 6230 FORMAT (1X, 1P2E15.4)
 6330 FORMAT (1X, 4I10)
 6350 FORMAT (1X, 6L10)
 6360 FORMAT (1X, 1P2E15.4, I10, E15.4)
 6370 FORMAT (1X, 1PE15.4, I10, 2E15.4)
 6375 FORMAT (46H **ERROR -- ALL VALUES ABOVE MUST BE POSITIVE )
 6390 FORMAT (1X, 6I10)
 6500 FORMAT (54H1************** SIMCONTROL FILE **********************)
 6510 FORMAT (32H0FILE DESCRIPTION HEADER RECORD /
     $  5X, 17HFILE TYPE      = , 10A1 /
     $  5X, 17HFILE ID        = , 60A1 /
     $  5X, 17HNO OF SEGMENTS = , I2   /
     $  5X, 17HNO OF SPECIES  = , I2   /
     $  5X, 17HBEG DATE       = , I5   /
     $  5X, 17HBEG TIME       = , F3.0 /
     $  5X, 17HEND DATE       = , I5   /
     $  5X, 17HEND TIME       = , F3.0 )
 6530 FORMAT (28H0SIMULATION CONTROLS RECORD /
     $  5X, 16HRUN ID        = , 60A1 //
     $  5X, 16HBEG DATE      = , I10  /
     $  5X, 16HBEG TIME      = , F10.2/
     $  5X, 16HEND DATE      = , I10  /
     $  5X, 16HEND TIME      = , F10.2//
     $  5X, 16HRESTART FLAG  = , L10  /  5X, 16HSINK FLAG     = , L10/
     $  5X, 16HPTS  FLAG     = , L10  /  5X, 16HRWY  FLAG     = , L10/
     $  5X, 16HTEMP FLAG     = , L10  /  5X, 16HTERR FLAG     = , L10//
     $  5X, 16HCONC VAR FLAG = , L10//
     $  5X, 16HDEF ROUGHNESS = , F10.4/
     $  5X, 16HDEF VEGETAT'N = , F10.4//
     $  5X, 16HMAX TIME SLICE= , F10.4/  5X, 16HMAX STEPS     = , I10 //
     $  5X, 16HMIN STEP SIZE = , F10.4/
     $  5X, 16HMAX ITERS     = , I10  /
     $  5X, 16HERR TOL       = , F10.6/
     $  5X, 16HDARK CRITERION= , F10.4//
     $  5X, 16HINST INTERVAL = , F10.2/
     $  5X, 16HAVG  INTERVAL = , F10.2//
     $  5X, 16HPRINT OPTIONS = ,  I10 / (21X, I10))
 6900 FORMAT (43H0PROGRAM TERMINATING DUE TO ABOVE ERROR(S)/
     $  5X, 27H -FIX CARD(S) AND RESUBMIT )
      END
